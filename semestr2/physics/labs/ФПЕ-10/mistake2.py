import numpy as np # Задля обробки масивів даних
from tabulate import tabulate # Задля красивоговиводу таблиці
import math

#============================U=============================== Обчислення похибки для U

STUDENT_COEF = 1.73 # Коефіцієнт Стьюдента
T_u = 0.006 # Обчислена похибка вирмірювання горизонтальної напруги на екрані осцилографа

# Масив виміряних горизонатних напруг для всіх значень опору R_m
horizontal_U = np.array([

    [0.1877, 0.1570, 0.1310],
    [0.3275, 0.2443, 0.1810],
    [0.4234, 0.2831, 0.1905],
    [0.4923, 0.2892, 0.1721],
    [0.5295, 0.2858, 0.1471],
    [0.5471, 0.2563, 0.1183]

])

# Масив виміряних опорів R_m
R_m_table = np.array([

    [100],
    [200],
    [300],
    [400],
    [500],
    [600]

])

I_table = horizontal_U / R_m_table # Масив виміряних сил струмів

Delta_I = np.sqrt((I_table * 0.03)**2 + T_u**2) # Масив абсолютних похибок вимірювання сил струмів

Delta_I_mean = np.mean(Delta_I) # Знаходження середнього значення абсолютної похибки вимірювання сил струмів

Delta_I1_mean = np.mean(Delta_I[:, 0]) # Знаходження середнього значення абсолютної похибки вимірювання сил струмів для 1 стовпця
Delta_I3_mean = np.mean(Delta_I[:, 1]) # Знаходження середнього значення абсолютної похибки вимірювання сил струмів для 3 стовпця

Delta_I_VALUE = np.sqrt(np.sum((Delta_I - Delta_I_mean)**2) / (len(Delta_I) * (len(Delta_I) - 1))) * STUDENT_COEF # Загальне обчислення абсолютної похибки вимірювання сил струмів

# Вивід результатів обрахунків
print(f"\nDelta_I = {Delta_I_VALUE} В")
print(f"mean_I = {Delta_I_mean} В")

#============================I=============================== Обчислення похибки для I

mean_R = 350 # Середнє значення опору R
mean_I = Delta_I_mean # Середнє значення абсолютної похибки вимірювання сил струмів
S_R = 17.7812 # Обчислена абсолютна похибка для R
S_I = Delta_I_VALUE # Обчислена абсолютна похибка для I

# Обчислення абсолютної похибки для I
delta_I = math.sqrt(

    (S_I / mean_R)**2 +
    (S_R * mean_I / mean_R**2)**2

) * 1e6 # для переводу в мкА

# Обчислення відносної похибки для I
Epsilon_I = math.sqrt(

    (S_I / mean_I)**2 +
    (S_R / mean_R)**2

) * 100
Epsilon_I = round(Epsilon_I, 4)

# Вивід результатів обрахунків
print(f"\nDelta_I = {delta_I} мкА")
print(f"Epsilon_I = {Epsilon_I} %")

#============================lambda=============================== Обчислення похибки для lambda

mean_I_i1 = np.mean(Delta_I[:, 0]) # Знаходження середнього значення абсолютної похибки вимірювання сил струмів для 1 стовпця
mean_I_i3 = np.mean(Delta_I[:, 2]) # Знаходження середнього значення абсолютної похибки вимірювання сил струмів для 3 стовпця

S_I_i1 = np.sqrt(np.sum((Delta_I[:, 0] - Delta_I1_mean)**2) / (len(Delta_I[:, 0]) * (len(Delta_I[:, 0]) - 1))) # Обчислення загальної абсолютної похибки вимірювання сил струмів для 1 стовпця

S_I_i3 = np.sqrt(np.sum((Delta_I[:, 2] - Delta_I1_mean)**2) / (len(Delta_I[:, 2]) * (len(Delta_I[:, 2]) - 1))) # Обчислення загальної абсолютної похибки вимірювання сил струмів для 3 стовпця

# Обчислення абсолютної похибки для lambda
delta_lambda = math.sqrt(

    ((2 * S_I_i1) / 3 * mean_I_i1)**2 +
    ((2 * S_I_i3) / 3 * mean_I_i3)**2

) * 1e9 # для переводу в нА

# Обчислення відносної похибки для lambda
Epsilon_lambda = math.sqrt(S_I_i1**2 + S_I_i3**2) / (math.log(mean_I_i1) - math.log(mean_I_i3)) * 100

# Вивід результатів обрахунків
print(f"\nDelta_lambda = {delta_lambda} * 10^{-9}")
print(f"Epsilon_lambda = {Epsilon_lambda} %")